---
# This is called the document YAML
# More options are described here: https://quarto.org/docs/reference/formats/docx.html
title: ""
author: "YOUR NAME HERE"
date: "`r format(Sys.time(), '%d %B, %Y')`"
format:
  docx:
    fig-width: 6
    fig-height: 4
    number-sections: false
# You need to create these files and path a path relative to the report document    
#    reference-doc: 'wordTemplate.docx'
#bibliography: bibfile.bib  
editor: source
---

<!-- Important - QUARTO files need to be saved with a qmd extension -->

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE,warning = FALSE,message = FALSE,comment = '',dpi=300)

# # You made need this to get special characters to work for PDF reports
# knitr::opts_chunk$set(echo = FALSE,warning = FALSE,message = FALSE,comment = '',dpi=300,dev="cairo_pdf")
library(tidyverse)
library(reportRmd)

# Custom ggplot adjustments can be made here
theme_pmh <- function(base_size=10){
  theme_bw(base_size=base_size)  %+replace% 
    theme(legend.position = 'bottom')
}
theme_set(theme_pmh(base_size=10))

# Set the ggplot palette
options(list(ggplot2.discrete.fill = function() reportRmd:::scale_colour_reportRx(),
             ggplot2.discrete.colour = function() reportRmd:::scale_colour_reportRx()))

R_version <- paste(sessionInfo()[1]$R.version$major,sessionInfo()[1]$R.version$minor,sep=".")
```

This is an example of the DiagrammeR package

```{r, eval=F}
library(DiagrammeR)
library(DiagrammeRsvg)

data(pembrolizumab)
str(pembrolizumab)
# A Data frame with patient details that we want to show
pembrolizumab %>%
  janitor::tabyl(cohort,sex) %>%
  mutate(
    total=Female+Male) %>%
  pivot_longer(cols=c('Female','Male'),names_to = 'sex',values_to = 'count') %>%
  mutate(
    nodeLabels = paste(sex,count,sep='\n'),
    nodeLabels = letters[1:n()])
    
data("ctDNA")
str(ctDNA)

combined_data <- full_join(pembrolizumab,ctDNA,multiple='all')


# Create node labels in a data frame
nodeLabels <- data.frame(
  # Sample Size Variables
  A1=paste('pembrolizumab',nrow(pembrolizumab),sep='\n'),
  A2=paste('ctDNA',length(unique(ctDNA)),sep='\n'),
  A3=paste('combined_data',length(unique(combined_data)),sep='\n'),
  
  # Cohort Information
  B1=paste('cohort A',sum(pembrolizumab$cohort=="A"),sep='\n'),
  B2=paste('cohort B',sum(pembrolizumab$cohort=="B"),sep='\n'),
  B3=paste('cohort C',sum(pembrolizumab$cohort=="C"),sep='\n'),
  B4=paste('cohort D',sum(pembrolizumab$cohort=="D"),sep='\n'),
  B5=paste('cohort E',sum(pembrolizumab$cohort=="E"),sep='\n'),

  # Longitudinal Information
  C1=paste('cohort A',sum(combined_data$cohort=="A"),sep='\n'),
  C2=paste('cohort B',sum(combined_data$cohort=="B"),sep='\n'),
  C3=paste('cohort C',sum(combined_data$cohort=="C"),sep='\n'),
  C4=paste('cohort D',sum(combined_data$cohort=="D"),sep='\n'),
  C5=paste('cohort E',sum(combined_data$cohort=="E"),sep='\n')
)

# Create labels for cut and paste
sink('lbl.txt')
for (i in 1:ncol(nodeLabels)){
  cat(names(nodeLabels)[i]," [label = '@@1-",i,"']",sep="")
  cat("\n")
}

library(DiagrammeR)
tmp <- grViz("digraph{
  graph[rankdir = TB,overlap=TRUE,width=1]
  
  node[fontcolor=darkslategray,style='filled',margin=.15,fillcolor='#f2f4ea',shape='rectangle',fontname=arial,fontsize=12]
  A1,A2,A3
  
  node[fontcolor=black,style='filled',margin=.15,fillcolor='#c7d9e8',shape='rounded',fontname=arial,fontsize=12]
  B1,B2,B3,B4,B5
  
  node[fontcolor=black,margin=.15,style='',shape='box',fontname=arial,fontsize=12,penwidth=1.5,color=steelblue]
  C1,C2,C3,C4,C5
  
  # Edge statements
  A1 -> A3
  A2 -> A3
  A1 -> B1
  A1 -> B2
  A1 -> B3
  A1 -> B4
  A1 -> B5
  A3 -> C1
  A3 -> C2
  A3 -> C3
  A3 -> C4
  A3 -> C5
  
subgraph {
  rank = same; A1,A2
}

subgraph {
  rank = same; C1,C2,C3,C4,C5
}
        # define labels using Graphviz substitution
A1 [label = '@@1-1']
A2 [label = '@@1-2']
A3 [label = '@@1-3']
B1 [label = '@@1-4']
B2 [label = '@@1-5']
B3 [label = '@@1-6']
B4 [label = '@@1-7']
B5 [label = '@@1-8']
C1 [label = '@@1-9']
C2 [label = '@@1-10']
C3 [label = '@@1-11']
C4 [label = '@@1-12']
C5 [label = '@@1-13']
}
[1]: nodeLabels

")
tmp
tmp = DiagrammeRsvg::export_svg(tmp)
tmp = charToRaw(tmp)
rsvg::rsvg_png(tmp, 'fig1.png')

```

![](fig1.png)


\newpage

This is another great example from the internet


```{r, eval=F}
tmp <- grViz("digraph G {
      rankdir = LR
      edge[style = invis]
      node[fontname = 'helvetica', width = 1.5, height = 0.5, fontsize = 20]
      graph[fontname = 'helvetica', fontsize = 20]

  subgraph clusterLeft{
      peripheries=0

      subgraph cluster_one {
      peripheries=1

      node[shape = box, style = filled, fillcolor = lightblue];
      label = '30 days post-procedure';
      style = dashed;
      fontname = 'helvetica-bold';
      rank = same;

      node[shape = box, style = filled, color = black];
      tab6 [label = 'FU within window (n=@@1-1)']
      tab7 [label = 'FU outside window (n=@@1-2)']
      tab8 [label = 'Missed visit (n=@@1-3)']
      tab9 [label = 'Exit study prior to visit (n=@@1-4)']
      tab10 [label = 'Visit pending (n=@@1-5)']
      tab11 [label = 'Unknown (n=@@1-6)']

      tab6 -> tab8
      tab7 -> tab11

      }

      subgraph cluster_two {
      peripheries=1

      node[shape = box, style = filled, fillcolor = lightblue];
      label = '1 year post-procedure';
      style = dashed;
      fontname = 'helvetica-bold';
      rank = same;

      node[shape = box, style = filled, color = black];
      tab12 [label = 'FU within window (n=@@2-1)']
      tab13 [label = 'FU outside window (n=@@2-2)']
      tab14 [label = 'Missed visit (n=@@2-3)']
      tab15 [label = 'Exit study prior to visit (n=@@2-4)']
      tab16 [label = 'Visit pending (n=@@2-5)']
      tab17 [label = 'Unknown (n=@@2-6)']

      tab12 -> tab14
      tab13 -> tab17

      }

      subgraph cluster_three {
      peripheries=1

      node[shape = box, style = filled, fillcolor = lightblue];
      label = '2 years post-procedure';
      style = dashed;
      fontname = 'helvetica-bold';
      rank = same;

      node[shape = box, style = filled, color = black];
      tab18 [label = 'FU within window (n=@@3-1)']
      tab19 [label = 'FU outside window (n=@@3-2)']
      tab20 [label = 'Missed visit (n=@@3-3)']
      tab21 [label = 'Exit study prior to visit (n=@@3-4)']
      tab22 [label = 'Visit pending (n=@@3-5)']
      tab23 [label = 'Unknown (n=@@3-6)']

      tab18 -> tab20
      tab19 -> tab23

      }
  }
  subgraph clusterRight {
      peripheries=0

      subgraph cluster_four {
      peripheries=1

      node[shape = box, style = filled, fillcolor = lightblue];
      label = '1 year post-randomization';
      style = dashed;
      fontname = 'helvetica-bold';
      rank = same;

      node[shape = box, style = filled, color = black];
      tab24 [label = 'FU within window (n=@@4-1)']
      tab25 [label = 'FU outside window (n=@@4-2)']
      tab26 [label = 'Missed visit (n=@@4-3)']
      tab27 [label = 'Exit study prior to visit (n=@@4-4)']
      tab28 [label = 'Visit pending (n=@@4-5)']
      tab29 [label = 'Unknown (n=@@4-6)']

      tab24 -> tab26
      tab25 -> tab29

      }

      subgraph cluster_five {
      peripheries=1

      node[shape = box, style = filled, fillcolor = lightblue];
      label = '2 years post-randomization';
      style = dashed;
      fontname = 'helvetica-bold';
      rank = same;

      node[shape = box, style = filled, color = black];
      tab30 [label = 'FU within window (n=@@5-1)']
      tab31 [label = 'FU outside window (n=@@5-2)']
      tab32 [label = 'Missed visit (n=@@5-3)']
      tab33 [label = 'Exit study prior to visit (n=@@5-4)']
      tab34 [label = 'Visit pending (n=@@5-5)']
      tab35 [label = 'Unknown (n=@@5-6)']

      tab30 -> tab32
      tab31 -> tab35

      }
  }

  tab17 ->  tab28
}

      [1]: c(1, 2, 3, 4, 5, 6)
      [2]: c(1, 2, 3, 4, 5, 6)
      [3]: c(1, 2, 3, 4, 5, 6)
      [4]: c(1, 2, 3, 4, 5, 6)
      [5]: c(1, 2, 3, 4, 5, 6)
")
tmp
tmp = DiagrammeRsvg::export_svg(tmp)
tmp = charToRaw(tmp)
rsvg::rsvg_png(tmp, 'fig2.png')

```

![](fig2.png)